1、多重赋值
var a int = 100
var b int = 200
b, a = a, b   //多重赋值
fmt.Println(a, b)

---------

type IntSlice []int
func (p IntSlice) Len() int           { return len(p) }
func (p IntSlice) Less(i, j int) bool { return p[i] < p[j] }
func (p IntSlice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }

---------

type IntSlice []int
func (p IntSlice) Len() int           { return len(p) }
func (p IntSlice) Less(i, j int) bool { return p[i] < p[j] }
func (p IntSlice) Swap(i, j int)      { p[i], p[j] = p[j], p[i] }

第 1 行，将 IntSlice 声明为 []int 类型。
第 3 行，为 IntSlice 类型编写一个 Len 方法，提供切片的长度。                  //切片
第 4 行，根据提供的 i、j 元素索引，获取元素后进行比较，返回比较结果。
第 5 行，根据提供的 i、j 元素索引，交换两个元素的值。
---------


2、匿名变量

func GetData() (int, int) {
    return 100, 200
}
func main(){
    a, _ := GetData()
    _, b := GetData()
    fmt.Println(a, b)
}

但任何赋给这个标识符的值都将被抛弃。使用匿名变量时，只需要在变量声明的地方使用下画线替换即可。
匿名变量不占用内存空间，不会分配内存。匿名变量与匿名变量之间也不会因为多次声明而无法使用。
提示：在 Lua 等编程语言里，匿名变量也被叫做哑元变量。

3、全局变量
全局变量声明必须以 var 关键字开头，如果想要在外部包中使用全局变量的首字母必须大写。

