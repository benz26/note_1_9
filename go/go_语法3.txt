--------------

不用加括号
if 'a' <= c && c <= 'z' ||
    'A' <= c && c <= 'Z' ||
    '0' <= c && c <= '9' {
    // ...ASCII字母或数字...
}

--------------

字符串：
字符串 str 的第 1 个字节：str[0]
第 i 个字节：str[i - 1]
最后 1 个字节：str[len(str)-1]

需要注意的是，这种转换方案只对纯 ASCII 码的字符串有效。
注意：获取字符串中某个字节的地址属于非法行为，例如 &str[i]。

--------------
（1）、
str := "Beginning of the string " +
"second part of the string"
提示：因为编译器会在行尾自动补全分号，所以拼接字符串用的加号“+”必须放在第一行末尾。

（2）、
也可以使用“+=”来对字符串进行拼接：
纯文本复制
s := "hel" + "lo,"
s += "world!"
fmt.Println(s) //输出 “hello, world!”

（3）、
如果想要在源码中嵌入一个多行字符串时，就必须使用`反引号，代码如下：
const str = `第一行
第二行
第三行
\r\n
`

--------------

