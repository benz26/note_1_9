watch 监控命令

multi 命令之前使用 watch 命令监控某些键值对，
然后使用 multi 命令开启事务。

exec时，会去对比watch命令监控的键值对，有变化会回滚


------------------------------

watch
在线程开始的时候读取这些多线程共享的数据，将其保存在当前进程的副本中，

multi
开启线程业务逻辑，比较当前线程副本保存的旧值和当前线程共享的值是否一致
如果不一致，那么该数据被其他线程操作过，此次更新失败


从上面的分析可以看出，Redis 在执行事务的过程中，并不会阻塞其他连接的并发，
而只是通过比较 watch 监控的键值对去保证数据的一致性，所以 Redis 
多个事务完全可以在非阻塞的多线程环境中并发执行，而且 Redis 的机制是不会产生 ABA 问题的，
这样就有利于在保证数据一致的基础上，提高高并发系统的数据读/写性能。

------------------------------
【例子】：

（1）、
flushdb

set key1 value1

watch key1

multi

set key2 value2

exec   //Redis 会在这个时间点检测 key1 的值在 T2 时刻后，有没有被其他命令修改过，如果没有，则提交事务去执行

get key2
value2

（2）、
客户端1：
set key1 value1

watch key1

multi

set key2 value1 //设置的value1

exec  //回滚事务
get key2
value2  //并非value1

客户端2：set key1 val1









value2