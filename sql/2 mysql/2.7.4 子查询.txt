1、IN | NOT IN
mysql> SELECT name FROM tb_students_info 
    -> WHERE course_id [NOT] IN (SELECT id FROM tb_course WHERE course_name = 'Java');
	
	等于
	mysql> SELECT id FROM tb_course 
    -> WHERE course_name = 'Java';
	
	mysql> SELECT name FROM tb_students_info 
    -> WHERE course_id IN (1);
	
===========================================
	
2、	
//子查询(子查询会产生笛卡尔积)
SELECT * FROM score
WHERE grade_id IN (SELECT id FROM grade WHERE category = 'Java');

//在编写以上语句时，可以不使用子查询，而是把它转换为一个简单的连接：
SELECT score.* FROM score INNER JOIN grade
ON score.grade_id = grade.id WHERE grade.category = 'Java';

//连接
SELECT <字段名> FROM <表1> INNER JOIN <表2> [ON子句]
//INNER JOIN...ON（连接和连接条件）;
----

我们可以发现这些子查询语句都遵从这样一种形式：
SELECT * FROM table1
WHERE column1 IN (SELECT [DISTINCT] column2a FROM table2 WHERE column2b = value);

其中，column1 代表 table1 中的字段，column2a 和 column2b 代表 table2 表中的字段。这类查询都可以被转换为下面这种形式的连接查询：
SELECT table1. * FROM table1 INNER JOIN table2
ON table1. column1 = table. column2a WHERE table2. column2b = value;

=====================================
