============================================
【查询】

1、分解表
有些表在设计时设置了很多的字段，而有些字段的使用频率非常低。

将这些使用频率较低的字段分离出来形成新表。    //使用频率较低，分解表，使用连接查询

例子：
mysql> DESC `student_comment`;
+---------+---------+------+-----+---------+-------+
| Field   | Type    | Null | Key | Default | Extra |
+---------+---------+------+-----+---------+-------+
| id      | int(11) | NO   | PRI | NULL    |       |
| comment | text    | YES  |     | NULL    |       |
+---------+---------+------+-----+---------+-------+

如果需要将学生的学籍信息与备注信息同时显示，可以使用表连接查询 student 表和 student_comment 表，查询语句如下：
SELECT * FROM student, student_comment WHERE student.id=student_comment.id;

可以有效的提高 student 表的查询效率。

----------

2、增加中间表  //把两个表中，频繁使用的数据，集合到第三张表中

表连接会降低数据库的查询速度，所以对于经常使用表连接查询的表，我们可以建立中间表来提高查询速度。

INSERT INTO temp_score SELECT student.id, student.name, score.grade
FROM student, score WHERE student.id=score.stu_id;

==================================================================
【插入】

（1）、 禁用索引
插入数据之前先禁用索引，等到数据都插入完毕后在开启索引。

禁用索引的语句为：
ALTER TABLE table_name DISABLE KEYS;

重新开启索引的语句为：
ALTER TABLE table_name ENABLE KEYS;

对于新创建的表，可以先不创建索引，等到数据都导入以后再创建索引，这样可以提高导入数据的速度。 （那么插入的过程较快，但是没有排序；创建索引之后再排序？？）

(2)、禁用唯一性检查
插入数据时，MySQL 会对插入的数据进行唯一性检查。这种唯一性检验会降低插入数据的速度。
为了降低这种情况对查询速度的影响，可以在插入数据前禁用唯一性检查，等到插入数据完毕后在开启。

禁用唯一性检查的语句为：
SET UNIQUE_CHECKS=0;

开启唯一性检查的语句为：
SET UNIQUE_CHECKS=1;

（3）、批量插入
使用第一种，快一些
INSERT INTO items(name,city,price,number,picture) VALUES ('耐克运动鞋','广州',500,1000,'001.jpg'),('耐克运动鞋2','广州2',500,1000,'002.jpg');

INSERT INTO items(name,city,price,number,picture)  VALUES('耐克运动鞋','广州',500,1000,'001.jpg');
INSERT INTO items(name,city,price,number,picture)  VALUES('耐克运动鞋2','广州',500,1000,'002.jpg');

（4）、
3. 禁止自动提交
在《MySQL设置事务自动提交》一节我们提到 MySQL 的事务自动提交模式默认是开启的，
其对 MySQL 的性能也有一定得影响。也就是说如果你插入了 1000 条数据，MySQL 就会提交 1000 次，
这大大影响了插入数据的速度。通过程序来控制，只要一次提交就可以了。

所以插入数据之前可以先禁止事务的自动提交，(SET AUTOCOMMIT=0; )待数据导入完成之后，再恢复自动提交操作。(SET AUTOCOMMIT=1; )

------
