1、查看用户权限

(1)、查询 user 表。
SELECT * FROM mysql.user;

（2）、SHOW GRANTS
语法：
SHOW GRANTS FOR 'username'@'hostname';

例子：
mysql> CREATE USER 'testuser1'@'localhost';
mysql> SHOW GRANTS FOR 'testuser1'@'localhost';
 GRANT USAGE ON *.* TO 'testuser1'@'localhost' //USAGE ON *.*表示该用户对任何数据库和任何表都没有权限。USAGE就是无用
 GRANT SELECT, INSERT ON *.* TO 'testUser'@'localhost' WITH GRANT OPTION 
 //SELECT, INSERT就是有查询和插入的权限
 //WITH GRANT OPTION 可以把权限授权给其他用户
 
 
2、用户授权
 语法：
 GRANT priv_type [(column_list)] ON database.table
TO user [IDENTIFIED BY [PASSWORD] 'password']
[, user[IDENTIFIED BY [PASSWORD] 'password']] ...
[WITH with_option [with_option]...]
其中：
priv_type 参数表示权限类型；
columns_list 参数表示权限作用于哪些列上，省略该参数时，表示作用于整个表；
database.table 用于指定权限的级别；
user 参数表示用户账户，由用户名和主机名构成，格式是“'username'@'hostname'”；
IDENTIFIED BY 参数用来为用户设置密码；
password 参数是用户的新密码。

WITH 关键字后面带有一个或多个 with_option 参数。这个参数有 5 个选项，详细介绍如下：
GRANT OPTION：被授权的用户可以将这些权限赋予给别的用户；
MAX_QUERIES_PER_HOUR count：设置每个小时可以允许执行 count 次查询；
MAX_UPDATES_PER_HOUR count：设置每个小时可以允许执行 count 次更新；
MAX_CONNECTIONS_PER_HOUR count：设置每小时可以建立 count 个连接;
MAX_USER_CONNECTIONS count：设置单个用户可以同时具有的 count 个连接。

应地，在 GRANT 语句中可用于指定权限级别的值有以下几类格式：
*：表示当前数据库中的所有表。
*.*：表示所有数据库中的所有表。
db_name.*：表示某个数据库中的所有表，db_name 指定数据库名。
db_name.tbl_name：表示某个数据库中的某个表或视图，db_name 指定数据库名，tbl_name 指定表名或视图名。
db_name.routine_name：表示某个数据库中的某个存储过程或函数，routine_name 指定存储过程名或函数名。
TO 子句：如果权限被授予给一个不存在的用户，MySQL 会自动执行一条 CREATE USER 语句来创建这个用户，但同时必须为该用户设置密码。

例子：
mysql> GRANT SELECT,INSERT ON *.*
    -> TO 'testUser'@'localhost'
    -> IDENTIFIED BY 'testPwd'
    -> WITH GRANT OPTION;
	
3、删除用户权限

1）第一种
删除用户某些特定的权限，语法格式如下：
REVOKE priv_type [(column_list)]...
ON database.table
FROM user [, user]...

REVOKE 语句中的参数与 GRANT 语句的参数意思相同。其中：
priv_type 参数表示权限的类型；
column_list 参数表示权限作用于哪些列上，没有该参数时作用于整个表上；
user 参数由用户名和主机名构成，格式为“username'@'hostname'”。

例子：
mysql> REVOKE INSERT ON *.*
    -> FROM 'testUser'@'localhost';

2）第二种
删除特定用户的所有权限，语法格式如下：
REVOKE ALL PRIVILEGES, GRANT OPTION FROM user [, user] ...






